{"ast":null,"code":"var _jsxFileName = \"/Users/James/Desktop/reacttodoapp/src/components/Main.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react'\n// function Main() {\n//   // State\n//   const [todos, setTodos] = React.useState([]);\n//   // Binding\n//   const todoText = React.useRef();\n//   // Side Effects/ Lifecycle\n//   React.useEffect(()=> {\n//     const existingTodos = localStorage.getItem('todos');\n//     setTodos(existingTodos ? JSON.parse(existingTodos) : []);\n//   }, []);\n//   //Events\n//   function addTodo(event) {\n//     event.preventDefault();\n//     const next = [...todos, todoText.current.value];\n//     setTodos(next);\n//     localStorage.setItem('todos', JSON.stringify(next));\n//   }\n//   function clearLocal(event) {\n//     event.preventDefault();\n//     setTodos([]);\n//     localStorage.setItem('todos', '');\n//   }\n//   return (\n//       <div className=\"Main\">\n//         <h1>TO DO LIST</h1>\n//         <ul className='todos'>\n//           {todos.map(todo => (<li key={todo}>{todo}</li>))}\n//         </ul>\n//         <form onSubmit={addTodo}>\n//           <input type=\"text\" placeholder=\"What needs to be done?\" ref={todoText}></input>\n//           <input type=\"submit\" value=\"Add Todo\"></input>\n//         </form>\n//         <form onSubmit={clearLocal}>\n//           <input type=\"submit\" value=\"Refresh List\"></input>\n//         </form>\n//       </div>\n//     );\n//   }\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const saveData = newTodos => {\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"todos\")) {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  }, []);\n\n  const onAddTodo = () => {\n    if (newTodo.trim()) {\n      let newTodos = [...todos, {\n        todo: newTodo.trim(),\n        id: Date.now()\n      }];\n      setTodos(newTodos);\n      setNewTodo(\"\");\n      saveData(newTodos);\n    }\n  };\n\n  const deleteTodo = id => {\n    let newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n    saveData(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-dark mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"todoInput\",\n              className: \"form-control\",\n              placeholder: \"add todo\",\n              value: newTodo,\n              onChange: e => setNewTodo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              onClick: onAddTodo,\n              children: [\" \", \"Add\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            colSpan: \"2\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.id),\n              children: [\" \", \"Delete\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"HJloPNBkTiO05UC91Qpj9J5a300=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/James/Desktop/reacttodoapp/src/components/Main.js"],"names":["React","useState","useEffect","Main","todos","setTodos","newTodo","setNewTodo","saveData","newTodos","localStorage","setItem","JSON","stringify","getItem","parse","onAddTodo","trim","todo","id","Date","now","deleteTodo","filter","e","target","value","map"],"mappings":"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","sourcesContent":["// import React from 'react'\n\n// function Main() {\n  \n//   // State\n//   const [todos, setTodos] = React.useState([]);\n\n//   // Binding\n//   const todoText = React.useRef();\n\n//   // Side Effects/ Lifecycle\n//   React.useEffect(()=> {\n//     const existingTodos = localStorage.getItem('todos');\n//     setTodos(existingTodos ? JSON.parse(existingTodos) : []);\n\n//   }, []);\n\n//   //Events\n//   function addTodo(event) {\n//     event.preventDefault();\n//     const next = [...todos, todoText.current.value];\n//     setTodos(next);\n//     localStorage.setItem('todos', JSON.stringify(next));\n//   }\n\n//   function clearLocal(event) {\n//     event.preventDefault();\n//     setTodos([]);\n//     localStorage.setItem('todos', '');\n//   }\n\n//   return (\n//       <div className=\"Main\">\n        \n//         <h1>TO DO LIST</h1>\n\n//         <ul className='todos'>\n//           {todos.map(todo => (<li key={todo}>{todo}</li>))}\n//         </ul>\n\n//         <form onSubmit={addTodo}>\n//           <input type=\"text\" placeholder=\"What needs to be done?\" ref={todoText}></input>\n//           <input type=\"submit\" value=\"Add Todo\"></input>\n//         </form>\n\n//         <form onSubmit={clearLocal}>\n//           <input type=\"submit\" value=\"Refresh List\"></input>\n//         </form>\n\n//       </div>\n//     );\n//   }\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction Main() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const saveData = (newTodos) => {\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"todos\")) {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  }, []);\n\n  const onAddTodo = () => {\n    if (newTodo.trim()) {\n      let newTodos = [...todos, { todo: newTodo.trim(), id: Date.now() }];\n      setTodos(newTodos);\n      setNewTodo(\"\");\n      saveData(newTodos);\n    }\n  };\n\n  const deleteTodo = (id) => {\n    let newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n\n    saveData(newTodos);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"text-center\">Todo</h2>\n\n      <table className=\"table table-dark mt-5\">\n        <thead>\n          <tr>\n            <th>\n              <input\n                type=\"text\"\n                id=\"todoInput\"\n                className=\"form-control\"\n                placeholder=\"add todo\"\n                value={newTodo}\n                onChange={(e) => setNewTodo(e.target.value)}\n              />\n            </th>\n            <th>\n              <button className=\"btn btn-primary btn-block\" onClick={onAddTodo}>\n                {\" \"}\n                Add\n              </button>\n            </th>\n          </tr>\n        </thead>\n\n        <thead>\n          <tr>\n            <th scope=\"col\" colSpan=\"2\">\n              Task\n            </th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n\n        <tbody id=\"table\">\n          {todos.map((todo) => (\n            <tr key={todo.id}>\n              <td>{todo.todo}</td>\n              <td>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => deleteTodo(todo.id)}\n                >\n                  {\" \"}\n                  Delete{\" \"}\n                </button>{\" \"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n  \n  export default Main;"]},"metadata":{},"sourceType":"module"}